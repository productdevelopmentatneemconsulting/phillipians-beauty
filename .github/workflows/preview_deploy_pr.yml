name: Preview Deploy
on:
  pull_request:
    branches:
      - master
      - develop
jobs:
  deploy_preview:
    runs-on: ubuntu-latest
    name: Deploy Pull Request Preview
    outputs:
      url: ${{ steps.netlify-deploy.outputs.deploy-url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir.outputs.dir }}
            node_modules
            */node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            Linux-yarn-
            Linux-yarn-${{ hashFiles('**/yarn.lock') }}
      - name: Gatsby Cache Folder
        uses: actions/cache@v2
        id: gatsby-cache-folder
        with:
          path: packages/web/.cache
          key: ${{ runner.os }}-cache-gatsby
          restore-keys: |
            ${{ runner.os }}-cache-gatsby
      - name: Gatsby Public Folder
        uses: actions/cache@v2
        id: gatsby-public-folder
        with:
          path: packages/web/public/
          key: ${{ runner.os }}-public-gatsby
          restore-keys: |
            ${{ runner.os }}-public-gatsby
      - name: Install dependencies
        run: yarn workspace web install --pure-lockfile
      - name: Build Website
        env:
          SANITY_DEPLOY_STUDIO_TOKEN: ${{secrets.SANITY_AUTH_TOKEN}}
          app_local_algolia_search_api_key: ${{secrets.ALGOLIA_SEARCH_API_KEY}}
          app_local_algolia_app_id: ${{secrets.ALGOLIA_APP_ID}}
          app_local_sanityDataset: 'develop'
        run: yarn workspace web build
      - name: Upload Public Directory
        uses: actions/upload-artifact@v1
        with:
          name: public
          path: packages/web/public
      - name: Deploy to Netlify
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: "packages/web/public"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: ${{ github.event.pull_request.title }}
          alias: deploy-preview-${{ github.event.number }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_WEB_SITE_ID }}
      - run: echo netlify URL ${{ steps.netlify-deploy.outputs.deploy-url }}
  LightHouse:
    runs-on: ubuntu-latest
    name: Run LightHouse Tests
    needs: [deploy_preview]
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - run: mkdir -p packages/web/public
      - name: Download Public Directory
        uses: actions/download-artifact@v1
        with:
          name: public
          path: packages/web/public
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: install Lighhouse CLI
        run: npm install -g @lhci/cli@0.4.x
      - name: Run Lighthouse using configuration
        run: lhci autorun --config=packages/lighthouse-tests/lighthouserc.json
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
  sdtt:
    runs-on: ubuntu-latest
    name: Run Structured Data Tests
    needs: [deploy_preview]
    steps:
      - uses: actions/checkout@master
      - run: mkdir -p output/
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Run Structured Data Test
        run: |
          npm i structured-data-testing-tool -g
          sdtt --url  ${{ needs.deploy_preview.outputs.url }}/hair-style/how-to-do-a-dutch-braid-in-six-easy-steps/ --schemas "jsonld:HowTo" -p Twitter -p Facebook --presets SocialMedia -i > output/stt-pr-${{ github.event.number }}.txt
      - if: ${{ always() }}
        uses: actions/upload-artifact@v1
        with:
          name: structured-data-results
          path: output
      - if: ${{ always() }}
        uses: actions/download-artifact@v1
        with:
          name: structured-data-results
      - name: Deploy report page
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output
          keep_files: true
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
      - name: comment PR
        if: always()
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "Strcuture Data Test Results deployed on ${{secrets.REPO_DEPLOY_URL }}/stt-pr-${{ github.event.number }}.txt"
  cypress:
    runs-on: ubuntu-latest
    name: Run e2e Cypress Tests
    needs: [deploy_preview]
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: test
        env:
          PREVIEW_URL: ${{ needs.deploy_preview.outputs.url }}
        run: |
          echo "Before replacement"
          cat cypress.json
          sed -i "s@\${base.url}@$PREVIEW_URL@" cypress.json
          echo "After replacement"
          cat cypress.json
          echo $PREVIEW_URL
      - name: Cypress Run
        uses: cypress-io/github-action@v1
        env:
          CYPRESS_baseUrl: ${{ needs.deploy_preview.outputs.url }}
        with:
          spec: "packages/cypress-tests/*"
      - name: Copy test execution videos
        if: always()
        run: |
          mkdir public
          cp -r cypress/videos public/videos
      - name: Merge test results into one
        if: always()
        run: npm run report:merge
      - name: Generate HTML report
        if: always()
        run: npm run report:generate
      - name: Copy PR Specific File
        if: always()
        run: |
          mv public/index.html public/cypress-pr-${{ github.event.number }}.html
      - name: Deploy report page
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          keep_files: true
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"
      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      # Test run video was always captured, so this action uses "always()" condition
      - uses: actions/upload-artifact@v1
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos
      - name: comment PR
        if: always()
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "Cypress Test Results deployed on ${{secrets.REPO_DEPLOY_URL }}/cypress-pr-${{ github.event.number }}.html"
  pa11y:
    runs-on: ubuntu-latest
    name: Run Accessility Tests using pa11y
    needs: [deploy_preview]
    steps:
      - uses: actions/checkout@master
      - run: mkdir -p output/
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Run Accessility Tests using pa11y
        run: |
          npm install -g pa11y-ci
          npm install -g pa11y-ci-reporter-html
          pa11y-ci --sitemap https://prod-liberty.netlify.app/sitemap.xml --sitemap-find https://prod-liberty.netlify.app --sitemap-replace  ${{ needs.deploy_preview.outputs.url }} --json  > pa11y-ci-results.json
      - if: ${{ always() }}
        name: Generate HTML for pa11y report
        run: pa11y-ci-reporter-html -s pa11y-ci-results.json -d output/pa11y-pr-${{ github.event.number }}.html
      - if: ${{ always() }}
        uses: actions/upload-artifact@v1
        with:
          name: pa11y-results
          path: output
      - if: ${{ always() }}
        uses: actions/download-artifact@v1
        with:
          name: pa11y-results
      - name: comment PR
        if: always()
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: "pa11y Test Results deployed on ${{secrets.REPO_DEPLOY_URL }}/pa11y-pr-${{ github.event.number }}.html"
      - name: Deploy report page
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./output
          keep_files: true
          user_name: "github-actions[bot]"
          user_email: "github-actions[bot]@users.noreply.github.com"

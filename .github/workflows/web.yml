name: Web | Build and Deploy
on:
  # ONLY triggers on master branch
  repository_dispatch:
    types: [web-build-deploy]
  push:
    branches:
      - master
      - develop
      - preview
    paths:
      - packages/web/**
      - packages/beauty-portal-theme/**
jobs:
  web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Yarn cache directory
        id: yarn-cache-dir
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir.outputs.dir }}
            node_modules
            */node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            Linux-yarn-${{ hashFiles('**/yarn.lock') }}
            Linux-yarn-
      - name: Gatsby Cache Folder
        uses: actions/cache@v2
        id: gatsby-cache-folder
        with:
          path: packages/web/.cache
          key: ${{ runner.os }}-cache-gatsby
          restore-keys: |
            ${{ runner.os }}-cache-gatsby
      - name: Gatsby Public Folder
        uses: actions/cache@v2
        id: gatsby-public-folder
        with:
          path: packages/web/public/
          key: ${{ runner.os }}-public-gatsby
          restore-keys: |
            ${{ runner.os }}-public-gatsby
      - name: Install dependencies
        run: yarn workspace web install --pure-lockfile
      - name: Build Website
        env:
          SANITY_DEPLOY_STUDIO_TOKEN: ${{secrets.SANITY_AUTH_TOKEN}}
          app_local_algolia_search_api_key: ${{secrets.ALGOLIA_SEARCH_API_KEY}}
          app_local_algolia_app_id: ${{secrets.ALGOLIA_APP_ID}}
        run: yarn workspace web build
      - name: install Lighhouse CLI
        run: npm install -g @lhci/cli@0.4.x
      - name: Run Lighthouse Tests
        run: lhci autorun --config=packages/lighthouse-tests/lighthouserc.json
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      - name: Deploy Web Preview to Netlify Preview Environment
        if: ${{ contains(github.ref, 'preview') }}
        id: netlify-deploy-preview
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: "packages/web/public"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          production-branch: preview
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_WEB_DEV_SITE_ID }}
      - run: echo netlify URL ${{ steps.netlify-deploy-preview.outputs.deploy-url }}
      - name: Deploy Web to Netlify Development Environment
        if: ${{ contains(github.ref, 'develop') }}
        id: netlify-deploy-develop
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: "packages/web/public"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          production-branch: develop
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_WEB_DEV_SITE_ID }}
      - run: echo netlify URL ${{ steps.netlify-deploy-develop.outputs.deploy-url }}
      - name: Deploy Web to Netlify Production Environment
        if: ${{ contains(github.ref, 'master') }}
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: "packages/web/public"
          github-token: ${{ secrets.GITHUB_TOKEN }}
          production-branch: master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_WEB_SITE_ID }}
      - run: echo netlify URL ${{ steps.netlify-deploy.outputs.deploy-url }}
